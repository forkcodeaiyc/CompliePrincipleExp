程序开始	函数块
程序开始	修饰词闭包 类型 变量 ( 参数声明 ) { 函数块 }
	
修饰词闭包	@
星号闭包	@
数组下标	@
项	@
因式递归	@
参数声明	@
变量闭包	@
常量闭包	@
赋初值	@
声明闭包	@
函数块闭包	@
声明语句闭包	@
参数闭包	@
否则闭包	@
结构体 @

修饰词闭包	修饰词 修饰词闭包
修饰词	const
修饰词	unsigned
修饰词	signed
修饰词	static
修饰词	extern

类型 	auto 取地址
类型 	int 取地址
类型 	double 取地址
类型 	float 取地址
类型 	char 取地址
类型 	string 取地址
类型 	long 取地址
类型 	register 取地址
类型 	short 取地址


取地址  	星号闭包
星号闭包 	星号 星号闭包
星号	*


变量	标识符 数组下标
标识符	id

数组下标	[ 因式 ]

因式	( 表达式 )
表达式 	因子 项


项	+ 因子 项
项 	- 因子 项
项 	& 因子 项
项 	| 因子 项

因子 	因式 因式递归
因式递归 	* 因式 因式递归
因式递归	/ 因式 因式递归

因式	变量
因式	常量
常量	digit

因式递归	@

参数声明 	声明 声明闭包

声明	修饰词闭包 类型 变量 变量闭包 赋初值
变量闭包	, 变量 变量闭包

赋初值 	= 右值
右值	表达式
右值	{ 多个数据 }


多个数据 	常量 常量闭包
常量闭包 	, 常量 常量闭包


声明闭包 	声明 声明闭包

函数块	声明语句闭包 函数块闭包

声明语句闭包	声明语句 声明语句闭包
声明语句 	声明 ;

函数块闭包    结构体  函数块闭包
函数块闭包	流输入输出 函数块闭包
函数块闭包	赋值函数 函数块闭包
函数块闭包	for循环 函数块闭包
函数块闭包	while循环 函数块闭包
函数块闭包	条件语句 函数块闭包
函数块闭包	函数返回 函数块闭包

结构体 struct { 声明语句闭包 }

流输入输出	get ( 参数列表 ) ;
流输入输出	put ( 变量 ) ;

赋值函数 	变量 赋值或函数调用
赋值函数 	类型 变量 赋值或函数调用
赋值或函数调用  = ( 参数列表 ) ;
赋值或函数调用	 = 右值 ;

参数列表 	参数 参数闭包
参数闭包 	, 参数 参数闭包

参数 	标识符

参数	常量
参数	字符串
字符串	str

for循环	for ( 赋值函数 逻辑表达式 ; 后缀表达式 ) { 函数块 } ;
逻辑表达式	bool
逻辑表达式	表达式 运算符 表达式
逻辑表达式    ! 表达式
运算符	>
运算符	<
运算符	==
运算符	>=
运算符	<=
运算符	!=
运算符	%
运算符	&&
运算符	||

后缀表达式	变量 后缀运算符
后缀运算符	++
后缀运算符	--

while循环	while ( 逻辑表达式 ) { 函数块 } ;

条件语句	if ( 逻辑表达式 ) { 函数块 } ; 否则闭包
否则闭包  elif语句 否则闭包
否则闭包  else { 函数块 } ;
elif语句	 elif ( 逻辑表达式 ) { 函数块 } ;
	
函数返回	return 因式 ;